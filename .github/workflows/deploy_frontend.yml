name: Deploy Fastcrud

on:
  workflow_call:
    inputs:
      repo_project:
         required: true
         type: string
      client_name:
        required: true
        type: string
      client_repo_branch:
        required: false
        type: string
        default: 'master'
      fastcrud_repo_branch:
        required: false
        type: string
        default: 'master'
      vite_app_default_app_name:
        required: true
        type: string
      vite_api_host:
        required: true
        type: string
      vite_primary_color:
        required: false
        type: string
        default: 'blue'
      frontend_client_tcp_port:
        required: true
        type: string
      deploy_env_config_file:
        required: true
        type: string

    secrets:
      port:
        required: true
      username:
        required: true
      simbiose_ssh_key:
        required: true
      git_token:
        required: true


jobs:
  prepare-server-configuration:
    runs-on: self-hosted
    timeout-minutes: 10
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
    steps:
      # Define permissions before builds. It is a workaround for a GitHub Actions known service bug
      - name: Define permissions before builds and install libs
        run: |
          sudo chown -R $USER:$USER /home/simbiose/actions-runner/_work/${{ inputs.repo_project }}
      
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Export deployment matrix
        id: export-deployment-matrix
        run: |
          JSON="$(cat ./actions/${{ inputs.deploy_env_config_file }})"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment-matrix::$JSON"

  deployment:
    runs-on: self-hosted
    timeout-minutes: 40
    strategy:
      max-parallel: 1
      matrix:
        server: ${{ fromJson(needs.prepare-server-configuration.outputs.deployment-matrix) }}
    env:
      VITE_PRIMARY_COLOR: ${{ inputs.vite_primary_color}}
      VITE_APP_DEFAULT_APP_NAME: ${{ inputs.vite_app_default_app_name }}
      VITE_API_HOST: ${{ inputs.vite_api_host }}
      REPO_PROJECT: ${{ inputs.repo_project }}
      CLIENT_NAME: ${{ inputs.client_name }}
      CLIENT_REPO_BRANCH: ${{ inputs.client_repo_branch }}
      FASTCRUD_REPO: fast-crud
      FASTCRUD_REPO_BRANCH: ${{ inputs.fastcrud_repo_branch }}
      FRONTEND_CLIENT_TCP_PORT: ${{ inputs.frontend_client_tcp_port }}
      PROJECT_NAME: project_scripts
    needs: [prepare-server-configuration]
    if: success()
    steps:
      - name: Run fastcrud deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.server.ip }}
          username: ${{ secrets.username }}
          key: ${{ secrets.simbiose_ssh_key }}
          port: ${{ secrets.port }}
          command_timeout: 40m
          script_stop: true
          sync: true
          script: |
            echo "--------- FASTCRUD DEPLOY IS STARTING -----------"

            cd /simbiose
            echo "UPDATE FASTCRUD REPOSITORY"

            export REPO_DIR=`mktemp -d`
            echo "REPO_DIR=$REPO_DIR"
            rm -rf $REPO_DIR

            echo -e '\n\e[34;1mCloning Client repository - branch '${{ env.CLIENT_REPO_BRANCH }}' on temporary directory '$REPO_DIR'\e[0m'
            git clone -b ${{ env.CLIENT_REPO_BRANCH }} https://${{ secrets.git_token }}@github.com/s1mbi0se/${{ env.REPO_PROJECT }}.git $REPO_DIR
            pushd $REPO_DIR

            echo -e "\n*** Running yarn install into customer's repository *** \n"
            yarn install

            echo -e "\n*** Building custom scripts *** \n"
            yarn webpack
            echo -e "\n*** Cloning fast-crud's repository into customer's repository *** \n"
            git clone -b ${{ env.FASTCRUD_REPO_BRANCH }} https://${{ secrets.git_token }}@github.com/s1mbi0se/${{ env.FASTCRUD_REPO }}.git

            echo -e "\n*** Copying scripts into project folder *** \n"
            mkdir ${{ env.PROJECT_NAME }}
            cp -r "dist" ${{ env.PROJECT_NAME }}
            cp -r "sql_migrations" ${{ env.PROJECT_NAME }}
            cp -r "deploy_scripts" ${{ env.PROJECT_NAME }}
            cp -r ${{ env.PROJECT_NAME }} ${{ env.FASTCRUD_REPO }}
            rm -rf $PROJECT_NAME

            echo -e "\n*** Clear images and dockers *** \n"
            sudo docker system prune -f

            echo -e "\n*** Running FastCRUD Frontend docker build *** \n"
            cp ./actions/Dockerfile ./fast-crud/Dockerfile
            sudo docker build \
                   --build-arg VITE_PRIMARY_COLOR="${{ env.VITE_PRIMARY_COLOR }}" \
                   --build-arg VITE_APP_DEFAULT_APP_NAME="${{ env.VITE_APP_DEFAULT_APP_NAME }}" \
                   --build-arg VITE_API_HOST="${{ env.VITE_API_HOST }}" \
                    -t ${{ env.CLIENT_NAME }}_frontend ./fast-crud

            NAME=$(sudo docker ps | grep -w ${{ env.CLIENT_NAME }}_frontend | awk '{print $2}')
            printf "\n** Checking if a previous container is already running. Delete it if there is one.  Current container name is $NAME **\n"
            if [ "$NAME" != "" ];
            then
              printf "*** Killing current ${{ env.CLIENT_NAME }}_frontend container *** \n";
              sudo docker kill ${{ env.CLIENT_NAME }}_frontend;
              sudo docker rm ${{ env.CLIENT_NAME }}_frontend;
            else
                printf "*** No ${{ env.CLIENT_NAME }}_frontend container is currently running. *** \n";
            fi

            printf "\n*** Running new ${{ ENV.CLIENT_NAME }}_frontend container *** \n"
            sudo docker run --restart unless-stopped --name ${{ env.CLIENT_NAME }}_frontend -d -p ${{ env.FRONTEND_CLIENT_TCP_PORT }}:80 ${{ ENV.CLIENT_NAME }}_frontend

            popd
            rm -rf $REPO_DIR
            sudo docker system prune -f

            sleep 2
            echo -e "\n*** List of docker containers running *** \n"
            sudo docker ps

            echo "--------- DEPLOY IS FINISHED WITH SUCCESS ---------"